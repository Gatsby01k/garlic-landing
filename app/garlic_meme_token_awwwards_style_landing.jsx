"use client";

import React, { useEffect, useRef, useState } from "react";
import { motion, useMotionValue, useSpring } from "framer-motion";
import { Twitter, Send, Rocket, Shield, Coins, Sparkles, ChevronRight, ExternalLink, BadgeCheck, CheckCircle, Lock, Link as LinkIcon, Quote } from "lucide-react";

// –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç shadcn Button, –µ—Å–ª–∏ –µ—Å—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç–µ
let ShadcnBtn = null;
try { ShadcnBtn = require("@/components/ui/button").Button; } catch (e) {}

function cn(...classes) { return classes.filter(Boolean).join(" "); }

// ====== –û–±—â–∏–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã ======
const Container = ({ className, children }) => (
  <div className={cn("mx-auto w-full max-w-[1200px] px-4 md:px-8", className)}>{children}</div>
);

const SectionTitle = ({ kicker, title, caption, className }) => (
  <div className={cn("mb-10 text-center", className)}>
    {kicker && (<div className="mb-2 text-xs tracking-[0.2em] uppercase text-lime-300/80">{kicker}</div>)}
    <h2 className="font-display text-3xl md:text-5xl font-extrabold leading-tight bg-gradient-to-r from-lime-300 via-white to-lime-400 bg-clip-text text-transparent">
      {title}
    </h2>
    {caption && (<p className="mt-4 text-sm md:text-base text-white/70 max-w-2xl mx-auto">{caption}</p>)}
  </div>
);

const Noise = () => (
  <div aria-hidden className="pointer-events-none fixed inset-0 z-[1] opacity-[0.06] mix-blend-soft-light"
       style={{ backgroundImage:"url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"140\" height=\"140\"><filter id=\"n\"><feTurbulence baseFrequency=\"0.7\" numOctaves=\"3\"/></filter><rect width=\"100%\" height=\"100%\" filter=\"url(%23n)\" opacity=\"0.8\"/></svg>')" }} />
);

const Glow = ({ className }) => (<div className={cn("absolute -z-10 blur-3xl", className)} />);

const Card = ({ className, children }) => (
  <motion.div
    initial={{ opacity: 0, y: 36 }}
    whileInView={{ opacity: 1, y: 0 }}
    viewport={{ once: true, amount: 0.24 }}
    transition={{ duration: 0.6, ease: "easeOut" }}
    className={cn(
      "group relative rounded-3xl border border-white/10 bg-white/[0.02] p-6 backdrop-blur-xl",
      "shadow-[inset_0_1px_0_0_rgba(255,255,255,0.05),0_10px_30px_-10px_rgba(0,0,0,0.45)]",
      "transition-transform duration-300 will-change-transform hover:-translate-y-1",
      className
    )}
  >
    <div className="pointer-events-none absolute inset-0 rounded-3xl [background:linear-gradient(180deg,rgba(255,255,255,0.12),rgba(255,255,255,0.02))] opacity-70" />
    {children}
  </motion.div>
);

const Kbd = ({ children }) => (
  <kbd className="inline-flex items-center gap-1 rounded-md border border-white/10 bg-white/[0.04] px-2 py-1 text-[10px] uppercase tracking-wider text-white/70">{children}</kbd>
);

const Btn = ({ className, children, ...rest }) => {
  if (ShadcnBtn) return React.createElement(ShadcnBtn, { className, ...rest }, children);
  return (
    <motion.button
      whileHover={{ scale: 1.02, rotate: -1 }}
      whileTap={{ scale: 0.98 }}
      {...rest}
      className={cn(
        "relative inline-flex items-center gap-2 rounded-full px-5 py-3",
        "font-semibold tracking-wide",
        "bg-gradient-to-b from-lime-400 to-lime-500 text-black",
        "shadow-[0_8px_20px_-6px_rgba(132,204,22,0.6)] hover:shadow-[0_12px_28px_-6px_rgba(132,204,22,0.75)]",
        className
      )}
    >
      {children}
    </motion.button>
  );
};

// ====== –•—É–∫ –ø–∞—Ä–∞–ª–ª–∞–∫—Å–∞ ======
function useMouseParallax(strength = 20) {
  const ref = useRef(null);
  const x = useMotionValue(0);
  const y = useMotionValue(0);
  useEffect(() => {
    const el = ref.current;
    if (!el) return;
    const onMove = (e) => {
      const r = el.getBoundingClientRect();
      const mx = e.clientX - r.left - r.width / 2;
      const my = e.clientY - r.top - r.height / 2;
      x.set((mx / r.width) * strength);
      y.set((my / r.height) * strength);
    };
    const onLeave = () => { x.set(0); y.set(0); };
    el.addEventListener("mousemove", onMove);
    el.addEventListener("mouseleave", onLeave);
    return () => { el.removeEventListener("mousemove", onMove); el.removeEventListener("mouseleave", onLeave); };
  }, [x, y, strength]);
  return { ref, x, y };
}

// ====== SVG-–ª–æ–≥–æ—Ç–∏–ø ======
const GarlicSVG = ({ className, tiltX, tiltY }) => (
  <motion.svg viewBox="0 0 300 300" className={cn("drop-shadow-2xl", className)}
    style={{ x: tiltX, y: tiltY }} initial={{ rotate: -6, scale: 0.9 }}
    animate={{ rotate: [-6, 6, -6], scale: [0.9, 1, 0.9] }} transition={{ duration: 10, ease: "easeInOut", repeat: Infinity }}>
    <defs>
      <radialGradient id="gBulb" cx="50%" cy="40%" r="60%"><stop offset="0%" stopColor="#f5fff1"/><stop offset="70%" stopColor="#d7f7b5"/><stop offset="100%" stopColor="#b4f28a"/></radialGradient>
      <linearGradient id="gStroke" x1="0" y1="0" x2="0" y2="1"><stop offset="0%" stopColor="#8fe36a" /><stop offset="100%" stopColor="#4d7c0f" /></linearGradient>
      <filter id="soft" x="-20%" y="-20%" width="140%" height="140%"><feGaussianBlur in="SourceGraphic" stdDeviation="1.5"/></filter>
    </defs>
    <path d="M150 60c-10 18-16 29-24 38-28 33-50 38-50 82 0 42 37 68 74 68s74-26 74-68c0-44-22-49-50-82-8-9-14-20-24-38z" fill="url(#gBulb)" stroke="url(#gStroke)" strokeWidth="3" />
    <path d="M150 64c-6 36-12 62-12 116" stroke="#4d7c0f" strokeWidth="2" opacity=".4"/>
    <path d="M170 74c-4 32-8 60-8 102" stroke="#4d7c0f" strokeWidth="2" opacity=".3"/>
    <path d="M130 74c4 32 8 60 8 102" stroke="#4d7c0f" strokeWidth="2" opacity=".3"/>
    <path d="M150 40c8 10 12 24 10 36-6-6-14-10-22-12 2-10 6-18 12-24z" fill="#b4f28a" stroke="#4d7c0f" strokeWidth="2" filter="url(#soft)"/>
    <ellipse cx="120" cy="150" rx="12" ry="28" fill="#fff" opacity=".25"/>
    <ellipse cx="185" cy="180" rx="8" ry="18" fill="#fff" opacity=".18"/>
  </motion.svg>
);

const Pill = ({ children }) => (<span className="rounded-full border border-lime-300/30 bg-lime-300/10 px-3 py-1 text-xs text-lime-200">{children}</span>);

// ====== –ú–∞—Ä–∫–∏–∑–∞ ======
const Marquee = ({ items }) => (
  <div className="relative overflow-hidden [mask-image:linear-gradient(to_right,transparent,black_15%,black_85%,transparent)]">
    <div className="animate-[marquee_18s_linear_infinite] whitespace-nowrap">
      {items.concat(items).map((it, i) => (
        <span key={i} className="mx-6 inline-flex items-center gap-2 text-sm text-white/70">
          <span className="h-1.5 w-1.5 rounded-full bg-lime-400 inline-block" /> {it}
        </span>
      ))}
    </div>
    <style>{`@keyframes marquee { from { transform: translateX(0); } to { transform: translateX(-50%); } }`}</style>
  </div>
);

// ====== –°—á—ë—Ç—á–∏–∫ ======
const Counter = ({ to, suffix }) => {
  const [val, setVal] = useState(0);
  useEffect(() => {
    const start = performance.now();
    const loop = (t) => {
      const p = Math.min(1, (t - start) / 1200);
      setVal(Math.round(to * (0.5 - Math.cos(Math.PI * p) / 2)));
      if (p < 1) requestAnimationFrame(loop);
    };
    const id = requestAnimationFrame(loop);
    return () => cancelAnimationFrame(id);
  }, [to]);
  return <>{val.toLocaleString()} {suffix}</>;
};

// ====== –•–µ–¥–µ—Ä ======
const Header = () => (
  <div className="fixed inset-x-0 top-0 z-40">
    <Container>
      <motion.div
        initial={{ opacity: 0, y: -16 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6, ease: "easeOut" }}
        className="mt-4 flex items-center justify-between rounded-2xl border border-white/10 bg-white/[0.03] px-4 py-2 backdrop-blur-xl"
      >
        <a href="#top" className="flex items-center gap-2">
          <span className="text-2xl">üßÑ</span>
          <span className="font-semibold tracking-wide">GARLIC</span>
        </a>
        <nav className="hidden md:flex items-center gap-6 text-sm text-white/80">
          <a href="#about" className="hover:text-white">–û –ø—Ä–æ–µ–∫—Ç–µ</a>
          <a href="#token" className="hover:text-white">–¢–æ–∫–µ–Ω–æ–º–∏–∫–∞</a>
          <a href="#roadmap" className="hover:text-white">–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞</a>
          <a href="#buy" className="hover:text-white">–ö–∞–∫ –∫—É–ø–∏—Ç—å</a>
          <a href="#community" className="hover:text-white">–ö–æ–º—å—é–Ω–∏—Ç–∏</a>
        </nav>
        <div className="flex items-center gap-2">
          <a href="#buy" className="hidden md:block">
            <Btn>–ö—É–ø–∏—Ç—å <ChevronRight className="h-4 w-4"/></Btn>
          </a>
        </div>
      </motion.div>
    </Container>
  </div>
);

// ====== HERO ======
const Hero = () => {
  const { ref, x, y } = useMouseParallax(24);
  const sx = useSpring(x, { stiffness: 120, damping: 16 });
  const sy = useSpring(y, { stiffness: 120, damping: 16 });

  return (
    <section id="top" ref={ref} className="relative overflow-hidden pt-32 md:pt-40">
      <Glow className="left-[10%] top-[0%] h-[35rem] w-[35rem] bg-lime-400/30" />
      <Glow className="right-[-10%] top-[30%] h-[40rem] w-[40rem] bg-emerald-500/20" />
      <Glow className="left-1/3 top-[70%] h-[28rem] w-[28rem] bg-lime-300/20" />

      <Container>
        <div className="grid items-center gap-8 md:grid-cols-2">
          <motion.div className="relative z-10"
            initial={{ opacity: 0, y: 24 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.6 }}>
            <div className="mb-4 flex items-center gap-2 text-xs text-white/70">
              <Pill>#memecoin</Pill><Pill>#awwwards</Pill><Pill>#garlic</Pill>
            </div>
            <h1 className="font-display text-5xl md:text-7xl font-black leading-[0.95]">
              <span className="bg-gradient-to-r from-white via-lime-200 to-lime-400 bg-clip-text text-transparent">GARLIC</span>
              <span className="block text-white/80">–ú–µ–º‚Äë—Ç–æ–∫–µ–Ω —Å <span className="text-lime-300">–æ—Å—Ç—Ä—ã–º</span> —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º</span>
            </h1>
            <p className="mt-6 max-w-xl text-white/70">–ë–µ–∑ —É—Ç–∏–ª–∏—Ç—ã? –í–æ–∑–º–æ–∂–Ω–æ. –ë–µ–∑ –≤–∫—É—Å–∞ ‚Äî –Ω–∏–∫–æ–≥–¥–∞. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –∫—É–ª—å—Ç–∞¬≠–≤–æ–π –∞—Ä–º–∏–∏ üßÑ –∏ –ø—Ä–∏–ø—Ä–∞–≤—å –∫—Ä–∏–ø—Ç—É —é–º–æ—Ä–æ–º.</p>
            <div className="mt-8 flex flex-wrap items-center gap-3">
              <a href="#buy"><Btn>–ö—É–ø–∏—Ç—å GARLIC <ExternalLink className="h-4 w-4"/></Btn></a>
              <a href="#community" className="rounded-full border border-white/15 px-5 py-3 text-sm text-white/80 hover:bg-white/5">–°–æ–æ–±—â–µ—Å—Ç–≤–æ</a>
              <div className="hidden md:flex items-center gap-2 text-xs text-white/50"><Kbd>G</Kbd><span>‚Äî –∞–≤—Ç–æ‚Äë—Å–∫—Ä–æ–ª–ª –∫ —Ç–æ–∫–µ–Ω–æ–º–∏–∫–µ</span></div>
            </div>
          </motion.div>

          <motion.div className="relative -mr-6 md:mr-0"
            initial={{ opacity: 0, scale: 0.96 }} whileInView={{ opacity: 1, scale: 1 }} viewport={{ once: true }} transition={{ duration: 0.7 }}>
            <div className="absolute inset-0 -z-10 rounded-[2.5rem] bg-gradient-to-br from-white/10 to-white/0 blur-2xl" />
            <div className="relative aspect-square rounded-[2.5rem] border border-white/10 bg-white/[0.03] p-6 backdrop-blur-2xl">
              <GarlicSVG className="h-full w-full" tiltX={sx} tiltY={sy} />
              <div className="pointer-events-none absolute inset-4 rounded-[2rem] border border-white/5" />
              <div className="pointer-events-none absolute -left-6 top-6"><Pill>üßÑ + üå∂Ô∏è = üöÄ</Pill></div>
            </div>
          </motion.div>
        </div>

        <div className="mt-10 md:mt-14">
          <Marquee items={["No utility. Just spice.","Community first.","Liquidity: locked.","Zero taxes.","100% memes.","Global aroma."]} />
        </div>
      </Container>
    </section>
  );
};

// ====== ABOUT ======
const About = () => (
  <section id="about" className="relative py-20 md:py-28">
    <Container>
      <SectionTitle kicker="–û –ø—Ä–æ–µ–∫—Ç–µ" title="–ö—Ä–∏–ø—Ç–∞, –Ω–æ –≤–∫—É—Å–Ω–µ–µ" caption="GARLIC ‚Äî –º–µ–º‚Äë—Ç–æ–∫–µ–Ω –∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ª—é–±—è—Ç –æ—Å—Ç—Ä–æ–µ. –ú—ã —Å—Ç—Ä–æ–∏–º –≤–µ—Å—ë–ª—É—é, –¥–æ–±—Ä—É—é –∏ –¥–µ—Ä–∑–∫—É—é –∫—É–ª—å—Ç—É—Ä—É –≤–æ–∫—Ä—É–≥ —á–µ—Å–Ω–æ–∫–∞ ‚Äî –≤ –º–µ–º–∞—Ö, NFT –∏ –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–∞—Ö."/>
      <div className="grid gap-6 md:grid-cols-3">
        <Card><div className="mb-4 flex h-10 w-10 items-center justify-center rounded-xl bg-lime-300/20 text-lime-200"><Rocket className="h-5 w-5"/></div><h3 className="text-lg font-semibold">–í–∏—Ä—É—Å–Ω—ã–π –±—Ä–µ–Ω–¥</h3><p className="mt-2 text-sm text-white/70">–ú–µ–º—ã, —á–µ–ª–ª–µ–Ω–¥–∂–∏, —Å—Ç–∏–∫–µ—Ä—ã. –ö–æ–º—å—é–Ω–∏—Ç–∏ —Ä–∞—Å—Ç–∏—Ç –∞—Ä–æ–º–∞—Ç –±—ã—Å—Ç—Ä–µ–µ –ª—é–±–æ–≥–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞.</p></Card>
        <Card><div className="mb-4 flex h-10 w-10 items-center justify-center rounded-xl bg-lime-300/20 text-lime-200"><Coins className="h-5 w-5"/></div><h3 className="text-lg font-semibold">–ß–µ—Å—Ç–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞</h3><p className="mt-2 text-sm text-white/70">–ü—É–±–ª–∏—á–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å, –Ω—É–ª–µ–≤—ã–µ –Ω–∞–ª–æ–≥–∏ –Ω–∞ —Å–¥–µ–ª–∫–∏.</p></Card>
        <Card><div className="mb-4 flex h-10 w-10 items-center justify-center rounded-xl bg-lime-300/20 text-lime-200"><Sparkles className="h-5 w-5"/></div><h3 className="text-lg font-semibold">–°–æ–±—ã—Ç–∏—è –∏ NFT</h3><p className="mt-2 text-sm text-white/70">–î—Ä–æ–ø–∞¬≠–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏ ¬´Cloves¬ª, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤, –ø—Ä–æ–≤–æ–¥–∏–º spicy‚Äë–∏–≤–µ–Ω—Ç—ã.</p></Card>
      </div>
    </Container>
  </section>
);

// ====== TRUST (–Ω–æ–≤—ã–π –±–ª–æ–∫ –¥–æ–≤–µ—Ä–∏—è) ======
const Trust = () => (
  <section id="trust" className="relative py-20 md:py-28">
    <Container>
      <SectionTitle kicker="Trust & Transparency" title="–ü–æ—á–µ–º—É –Ω–∞–º –¥–æ–≤–µ—Ä—è—é—Ç"
        caption="–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∞–∫—Ç—ã, –Ω–µ –æ–±–µ—â–∞–Ω–∏—è: –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å, –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –∏ –ø—É–±–ª–∏—á–Ω—ã–µ —Å—Å—ã–ª–∫–∏." />
      <div className="grid gap-6 md:grid-cols-3">
        <Card>
          <div className="mb-4 flex h-10 w-10 items-center justify-center rounded-xl bg-emerald-400/20 text-emerald-200"><Lock className="h-5 w-5"/></div>
          <h3 className="text-lg font-semibold">Liquidity Locked</h3>
          <p className="mt-2 text-sm text-white/70">
            –õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ DEX. –°–º–æ—Ç—Ä–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –Ω–∞{" "}
            <a className="text-lime-300 underline" href="https://etherscan.io/" target="_blank" rel="noreferrer">Etherscan</a>.
          </p>
        </Card>
        <Card>
          <div className="mb-4 flex h-10 w-10 items-center justify-center rounded-xl bg-emerald-400/20 text-emerald-200"><BadgeCheck className="h-5 w-5"/></div>
          <h3 className="text-lg font-semibold">Verified Contract</h3>
          <p className="mt-2 text-sm text-white/70">
            –ö–æ–Ω—Ç—Ä–∞–∫—Ç –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã OpenZeppelin.
          </p>
        </Card>
        <Card>
          <div className="mb-4 flex h-10 w-10 items-center justify-center rounded-xl bg-emerald-400/20 text-emerald-200"><Shield className="h-5 w-5"/></div>
          <h3 className="text-lg font-semibold">Audit (TBA)</h3>
          <p className="mt-2 text-sm text-white/70">
            –ê—É–¥–∏—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω. –û—Ç—á—ë—Ç –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –∏ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ tx‚Äë—Ö—ç—à—É.
          </p>
        </Card>
      </div>
      <div className="mt-6 grid gap-6 md:grid-cols-3">
        <Card>
          <h4 className="text-sm text-white/60">–ö–æ–Ω—Ç—Ä–∞–∫—Ç</h4>
          <div className="mt-2 text-sm">
            <span className="inline-flex items-center gap-2 rounded-full border border-white/15 px-3 py-1 text-white/80">
              <LinkIcon className="h-4 w-4"/> <span className="text-white/60">0x‚Ä¶ (–ø–æ—è–≤–∏—Ç—Å—è –≤ –¥–µ–Ω—å –∑–∞–ø—É—Å–∫–∞)</span>
            </span>
          </div>
        </Card>
        <Card>
          <h4 className="text-sm text-white/60">–ù–∞–ª–æ–≥–∏</h4>
          <div className="mt-2 text-2xl font-extrabold">0%</div>
          <p className="mt-1 text-sm text-white/60">–ë–µ–∑ ¬´—Å–∫—Ä—ã—Ç—ã—Ö¬ª –∫–æ–º–∏—Å—Å–∏–π.</p>
        </Card>
        <Card>
          <h4 className="text-sm text-white/60">–ö–æ–º—å—é–Ω–∏—Ç–∏</h4>
          <div className="mt-2 flex flex-wrap gap-2">
            <Pill>DAO Multisig</Pill><Pill>Public Roadmap</Pill><Pill>Open Discord</Pill>
          </div>
        </Card>
      </div>
    </Container>
  </section>
);

// ====== PARTNERS (as seen on) ======
const Partners = () => (
  <section className="relative py-16">
    <Container>
      <div className="mb-8 text-center text-xs tracking-[0.2em] uppercase text-white/50">As seen on / Partners</div>
      <div className="grid grid-cols-2 md:grid-cols-6 gap-4 place-items-center opacity-80">
        {/* –ü–æ–ª–æ–∂–∏ –ª–æ–≥–æ—Ç–∏–ø—ã –≤ /public/partners/*.svg –∏ –∑–∞–º–µ–Ω–∏ –ø—É—Ç–∏ –Ω–∏–∂–µ */}
        <img src="/partners/coingecko.svg" className="h-6 md:h-7" alt="CoinGecko"/>
        <img src="/partners/cmc.svg" className="h-6 md:h-7" alt="CMC"/>
        <img src="/partners/uniswap.svg" className="h-6 md:h-7" alt="Uniswap"/>
        <img src="/partners/pancake.svg" className="h-6 md:h-7" alt="PancakeSwap"/>
        <img src="/partners/dexscreener.svg" className="h-6 md:h-7" alt="DEX Screener"/>
        <img src="/partners/opensea.svg" className="h-6 md:h-7" alt="OpenSea"/>
      </div>
    </Container>
  </section>
);

// ====== TESTIMONIALS ======
const Testimonials = () => (
  <section className="relative py-20 md:py-28">
    <Container>
      <SectionTitle kicker="–û—Ç–∑—ã–≤—ã" title="–ß—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –∫–æ–º—å—é–Ω–∏—Ç–∏" caption="–ù–µ–º–Ω–æ–≥–æ –ª—é–±–≤–∏ –∏ –º–µ–º–æ–≤ –æ—Ç –Ω–∞—à–∏—Ö —Ö–æ–ª–¥–µ—Ä–æ–≤."/>
      <div className="grid gap-6 md:grid-cols-3">
        {[1,2,3].map((i) => (
          <Card key={i}>
            <div className="flex items-start gap-3">
              <Quote className="h-5 w-5 text-lime-300/80 mt-1"/>
              <div>
                <p className="text-sm text-white/80">‚Äú–ß–µ—Å–Ω–æ—á–Ω—ã–π –≤–∞–π–± —Å–ø–∞—Å –º–æ–π –∫—Ä–∏–ø—Ç–æ‚Äë–ø–æ—Ä—Ç—Ñ–µ–ª—å ‚Äî —Ö–æ—Ç—è –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–Ω—è–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ üòÑ.‚Äù</p>
                <div className="mt-3 text-xs text-white/50">‚Äî @spicy_builder</div>
              </div>
            </div>
          </Card>
        ))}
      </div>
    </Container>
  </section>
);

// ====== FAQ (–Ω–∞ details/summary ‚Äî –±–µ–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫) ======
const FAQ = () => (
  <section className="relative py-20 md:py-28">
    <Container>
      <SectionTitle kicker="FAQ" title="–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã" />
      <div className="grid gap-3 md:grid-cols-2">
        {[
          {q:"–ï—Å—Ç—å –ª–∏ –Ω–∞–ª–æ–≥–∏ –Ω–∞ –ø–æ–∫—É–ø–∫—É/–ø—Ä–æ–¥–∞–∂—É?",a:"–ù–µ—Ç. –ù–∞–ª–æ–≥–∏ 0%. –ö–æ–º–∏—Å—Å–∏—è ‚Äî —Ç–æ–ª—å–∫–æ –≥–∞–∑ —Å–µ—Ç–∏."},
          {q:"–ì–¥–µ –≤–∑—è—Ç—å —Ç–æ–∫–µ–Ω?",a:"–ù–∞ DEX (Uniswap/Pancake). –ö–æ–Ω—Ç—Ä–∞–∫—Ç–Ω—ã–π –∞–¥—Ä–µ—Å –æ–ø—É–±–ª–∏–∫—É–µ–º –≤ –¥–µ–Ω—å –∑–∞–ø—É—Å–∫–∞."},
          {q:"–õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞?",a:"–î–∞, –ª–æ–∫–∞ ‚Äî –ø—É–±–ª–∏–∫—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ tx –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏."},
          {q:"–≠—Ç–æ –∏–Ω–≤–µ—Å—Ç—Å–æ–≤–µ—Ç?",a:"–ù–µ—Ç. –ú–µ–º‚Äë–ø—Ä–æ–µ–∫—Ç, –¥–µ–ª–∞–π—Ç–µ —Å–≤–æ—ë –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ (DYOR)."}
        ].map(({q,a},i)=>(
          <details key={i} className="group rounded-2xl border border-white/10 bg-white/[0.02] p-4">
            <summary className="cursor-pointer list-none select-none text-sm font-medium text-white/90 flex items-center justify-between">
              {q} <span className="ml-4 text-white/40 group-open:rotate-45 transition">+</span>
            </summary>
            <p className="mt-3 text-sm text-white/70">{a}</p>
          </details>
        ))}
      </div>
    </Container>
  </section>
);

// ====== TOKENOMICS / ROADMAP / BUY / COMMUNITY / FOOTER (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ —Å—É—Ç–∏) ======
const Tokenomics = () => (
  <section id="token" className="relative py-20 md:py-28">
    <Container>
      <SectionTitle kicker="–¢–æ–∫–µ–Ω–æ–º–∏–∫–∞" title="–ü—Ä–æ—Å—Ç–æ. –ü—Ä–æ–∑—Ä–∞—á–Ω–æ. –û—Å—Ç–æ—Ä–æ–∂–Ω–æ –æ—Å—Ç—Ä–æ." caption="–î–µ—Ç–∞–ª–∏ –º–æ–≥—É—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è –¥–æ —Ä–µ–ª–∏–∑–∞. DYOR, —ç—Ç–æ –Ω–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π —Å–æ–≤–µ—Ç."/>
      <div className="grid gap-6 md:grid-cols-12">
        <Card className="md:col-span-4"><div className="text-sm text-white/60">–û–±—â–∏–π supply</div><div className="mt-2 text-3xl font-extrabold"><Counter to={1_000_000_000}/> $GARLIC</div><p className="mt-3 text-sm text-white/60">–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω, –±–µ–∑ —ç–º–∏—Å—Å–∏–∏.</p></Card>
        <Card className="md:col-span-4"><div className="text-sm text-white/60">–ù–∞–ª–æ–≥–∏ –Ω–∞ —Å–¥–µ–ª–∫–∏</div><div className="mt-2 text-3xl font-extrabold"><Counter to={0}/> %</div><p className="mt-3 text-sm text-white/60">–ü–æ–∫—É–ø–∫–∞ –∏ –ø—Ä–æ–¥–∞–∂–∞ –±–µ–∑ –Ω–∞–ª–æ–≥–æ–≤.</p></Card>
        <Card className="md:col-span-4"><div className="text-sm text-white/60">–õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å</div><div className="mt-2 text-3xl font-extrabold">Locked</div><p className="mt-3 text-sm text-white/60">–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ DEX –¥–ª—è –∑–∞—â–∏—Ç—ã —Ö–æ–ª–¥–µ—Ä–æ–≤.</p></Card>
        <Card className="md:col-span-6"><h3 className="text-lg font-semibold">–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ</h3><ul className="mt-3 space-y-2 text-sm text-white/70"><li>‚Ä¢ 60% ‚Äî –õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å</li><li>‚Ä¢ 20% ‚Äî –ö–æ–º—å—é–Ω–∏—Ç–∏/airdrop/–∫–≤–µ—Å—Ç—ã</li><li>‚Ä¢ 10% ‚Äî –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–∞</li><li>‚Ä¢ 10% ‚Äî –†–µ–∑–µ—Ä–≤ DAO (–º—É–ª—å—Ç–∏—Å–∏–≥)</li></ul></Card>
        <Card className="md:col-span-6"><h3 className="text-lg font-semibold">–ö–æ–Ω—Ç—Ä–∞–∫—Ç</h3><p className="mt-3 text-sm text-white/70">–°–µ—Ç—å: Ethereum –∏–ª–∏ BSC. –ê–¥—Ä–µ—Å –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –¥–µ–Ω—å –∑–∞–ø—É—Å–∫–∞.</p><div className="mt-4 flex flex-wrap gap-2"><Pill>OpenZeppelin</Pill><Pill>Verified</Pill><Pill><BadgeCheck className="mr-1 inline h-3 w-3"/>Audited (TBA)</Pill></div></Card>
      </div>
    </Container>
  </section>
);

const Roadmap = () => (
  <section id="roadmap" className="relative py-20 md:py-28">
    <Container>
      <SectionTitle kicker="–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞" title="–ó—É–±—á–∏–∫ –∑–∞ –∑—É–±—á–∏–∫–æ–º" caption="–ì–∏–±–∫–∞—è –∏ –º–µ–º‚Äë–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è. –¶–µ–ª–∏ —É—Ç–æ—á–Ω—è—é—Ç—Å—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ–º DAO."/>
      <div className="grid gap-6 md:grid-cols-3">
        {[1,2,3].map((ph) => (
          <Card key={ph}>
            <div className="mb-3 text-xs uppercase tracking-[0.2em] text-lime-300/80">Clove 0{ph}</div>
            <h3 className="text-lg font-semibold">–§–∞–∑–∞ {ph}</h3>
            <ul className="mt-3 space-y-2 text-sm text-white/70">
              {ph===1 && (<><li>‚Ä¢ –ó–∞–ø—É—Å–∫ —Å–∞–π—Ç–∞ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π</li><li>‚Ä¢ –õ–∏—Å—Ç–∏–Ω–≥ –Ω–∞ DEX, –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å</li><li>‚Ä¢ Airdrop –¥–ª—è —Ä–∞–Ω–Ω–∏—Ö –º–µ–º‚Äë—Å–æ–∑–¥–∞—Ç–µ–ª–µ–π</li></>)}
              {ph===2 && (<><li>‚Ä¢ NFT‚Äë–∫–æ–ª–ª–µ–∫—Ü–∏—è ¬´Cloves¬ª</li><li>‚Ä¢ –ü–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–∞ —Å –∫—É–ª–∏–Ω–∞—Ä–Ω—ã–º–∏ –±—Ä–µ–Ω–¥–∞–º–∏</li><li>‚Ä¢ –ú–µ—Ä—á –∏ –æ—Ñ—Ñ–ª–∞–π–Ω spicy‚Äë–º–∏—Ç–∞–ø—ã</li></>)}
              {ph===3 && (<><li>‚Ä¢ Garlic DAO (–≥—Ä–∞–Ω—Ç—ã –∞–≤—Ç–æ—Ä–∞–º –º–µ–º–æ–≤)</li><li>‚Ä¢ –ò–≥—Ä–æ–≤—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ / –º–∏–Ω–∏‚Äë–∏–≥—Ä—ã</li><li>‚Ä¢ –õ–∏—Å—Ç–∏–Ω–≥–∏ CEX (–ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏)</li></>)}
            </ul>
          </Card>
        ))}
      </div>
    </Container>
  </section>
);

const HowToBuy = () => (
  <section id="buy" className="relative py-20 md:py-28">
    <Container>
      <SectionTitle kicker="–ö–∞–∫ –∫—É–ø–∏—Ç—å" title="3 —à–∞–≥–∞ ‚Äî –∏ –∞—Ä–æ–º–∞—Ç —Å –≤–∞–º–∏" />
      <div className="grid gap-6 md:grid-cols-3">
        <Card><div className="text-sm text-white/60">–®–∞–≥ 1</div><h3 className="mt-1 text-lg font-semibold">–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ—à–µ–ª—ë–∫</h3><p className="mt-2 text-sm text-white/70">MetaMask, Rabby, OKX Wallet. –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ç—å (ETH/BSC).</p></Card>
        <Card><div className="text-sm text-white/60">–®–∞–≥ 2</div><h3 className="mt-1 text-lg font-semibold">–ö—É–ø–∏—Ç–µ ETH/BNB</h3><p className="mt-2 text-sm text-white/70">–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –∫–æ—à–µ–ª—ë–∫ —á–µ—Ä–µ–∑ –±–∏—Ä–∂—É –∏–ª–∏ on‚Äëramp. –ù—É–∂–µ–Ω –≥–∞–∑.</p></Card>
        <Card><div className="text-sm text-white/60">–®–∞–≥ 3</div><h3 className="mt-1 text-lg font-semibold">–û–±–º–µ–Ω—è–π—Ç–µ –Ω–∞ $GARLIC</h3><p className="mt-2 text-sm text-white/70">Uniswap/PancakeSwap. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –Ω–∞ —Å–∞–π—Ç–µ.</p></Card>
      </div>
      <div className="mt-8 flex flex-wrap items-center gap-3">
        <Btn onClick={() => document.getElementById("community")?.scrollIntoView({behavior:"smooth"})}>–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ–º—å—é–Ω–∏—Ç–∏ <Send className="h-4 w-4"/></Btn>
        <span className="text-xs text-white/50">* –ö—Ä–∏–ø—Ç–∞ ‚Äî —Ä–∏—Å–∫. DYOR. –ù–µ –∏–Ω–≤–µ—Å—Ç—Å–æ–≤–µ—Ç.</span>
      </div>
    </Container>
  </section>
);

const Community = () => (
  <section id="community" className="relative py-20 md:py-28">
    <Container>
      <SectionTitle kicker="–°–æ–æ–±—â–µ—Å—Ç–≤–æ" title="–í—Å—Ç—É–ø–∞–π –≤ Garlic‚Äë–∫—É–ª—å—Ç" caption="–°–∏–ª–∞ ‚Äî –≤ –º–µ–º–∞—Ö, –ª—é–¥—è—Ö –∏ —á–µ—Å–Ω–æ—á–Ω–æ–º –¥—É—Ö–µ."/>
      <div className="flex flex-wrap items-center gap-4">
        <a href="https://twitter.com/" target="_blank" rel="noreferrer" className="group"><Btn className="bg-white text-black hover:opacity-90"><Twitter className="h-4 w-4"/> X (Twitter)</Btn></a>
        <a href="https://t.me/" target="_blank" rel="noreferrer" className="group"><Btn><Send className="h-4 w-4"/> Telegram</Btn></a>
        <a href="/litepaper.pdf" target="_blank" rel="noreferrer" className="group"><span className="inline-flex items-center gap-2 rounded-full border border-white/15 px-5 py-3 text-sm text-white/80 hover:bg-white/5"><Shield className="h-4 w-4"/> Litepaper</span></a>
      </div>
    </Container>
  </section>
);

const Footer = () => (
  <footer className="relative py-10 text-xs text-white/60">
    <Container>
      <div className="flex flex-col items-center justify-between gap-4 md:flex-row">
        <div className="flex items-center gap-2"><span className="text-lg">üßÑ</span><span>¬© {new Date().getFullYear()} Garlic. All smells reserved.</span></div>
        <div className="flex items-center gap-4">
          <a href="#" className="hover:text-white">Terms</a>
          <a href="#" className="hover:text-white">Privacy</a>
          <span className="text-white/40">This is a meme project. Not financial advice.</span>
        </div>
      </div>
    </Container>
  </footer>
);

// ====== –°—Ç—Ä–∞–Ω–∏—Ü–∞ ======
export default function GarlicAwwwardsSite() {
  useEffect(() => {
    const onKey = (e) => { if ((e.key || "").toLowerCase() === "g") { document.getElementById("token")?.scrollIntoView({ behavior: "smooth" }); } };
    window.addEventListener("keydown", onKey);
    return () => window.removeEventListener("keydown", onKey);
  }, []);

  return (
    <main className="relative min-h-screen bg-[#0b0f0a] text-white selection:bg-lime-300/30 selection:text-white">
      <Noise />
      <div aria-hidden className="pointer-events-none fixed inset-0 z-0 [background:radial-gradient(circle_at_50%_-20%,rgba(190,242,100,0.15),transparent_55%),radial-gradient(circle_at_90%_10%,rgba(52,211,153,0.12),transparent_40%)]" />

      <Header />
      <Hero />
      <About />

      {/* –î–æ–≤–µ—Ä–∏–µ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ */}
      <Trust />
      <Partners />
      <Testimonials />

      <Tokenomics />
      <Roadmap />
      <HowToBuy />
      <FAQ />
      <Community />
      <Footer />

      <div className="fixed bottom-4 right-4 hidden rounded-full border border-white/15 bg-white/5 px-3 py-2 text-[11px] text-white/70 md:block">
        –ù–∞–∂–º–∏ <Kbd>G</Kbd> ‚Äî —Ç–æ–∫–µ–Ω–æ–º–∏–∫–∞
      </div>
    </main>
  );
}
