"use client";

import React, { useEffect, useRef, useState, useMemo, useCallback, useContext, createContext } from "react";
import Link from "next/link";
import Image from "next/image";

/* ======================= –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º—ã / —É—Ç–∏–ª—ã ======================= */
const cx = (...a) => a.filter(Boolean).join(" ");
const clamp = (n, min, max) => Math.max(min, Math.min(max, n));
const lerp = (a, b, t) => a + (b - a) * t;
const isClient = typeof window !== "undefined";

/* ======================= –ö–æ–Ω—Ç–µ–∫—Å—Ç: –∫—É—Ä—Å–æ—Ä / –∫–ª–∏–∫–∏ ======================= */
const CursorContext = createContext({ x: 0, y: 0, clicked: false });
function CursorProvider({ children }) {
  const [state, setState] = useState({ x: 0, y: 0, clicked: false });

  useEffect(() => {
    const move = (e) => setState((s) => ({ ...s, x: e.clientX, y: e.clientY }));
    const down = () => setState((s) => ({ ...s, clicked: true }));
    const up = () => setState((s) => ({ ...s, clicked: false }));
    window.addEventListener("mousemove", move);
    window.addEventListener("mousedown", down);
    window.addEventListener("mouseup", up);
    return () => {
      window.removeEventListener("mousemove", move);
      window.removeEventListener("mousedown", down);
      window.removeEventListener("mouseup", up);
    };
  }, []);

  return <CursorContext.Provider value={state}>{children}</CursorContext.Provider>;
}

/* ======================= I18N: —Å–ª–æ–≤–∞—Ä—å ======================= */
const LANGS = ["ru", "en", "hi", "id"];
const FALLBACK = "ru";

const DICT = {
  ru: {
    nav: {
      approach: "–ü–æ–¥—Ö–æ–¥",
      policy: "–ü–æ–ª–∏—Ç–∏–∫–∞",
      tokenomics: "–¢–æ–∫–µ–Ω–æ–º–∏–∫–∞",
      roadmap: "–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞",
      buy: "–ö—É–ø–∏—Ç—å",
    },
    trustStrip: ["FAIR LAUNCH", "ZERO TAX", "LP LOCK", "RENOUNCED"],
    hero: {
      tags: ["–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞", "–ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å", "–∫–æ–º—å—é–Ω–∏—Ç–∏"],
      titleTop: "GARLIC",
      titleBottom: "–º–µ–º-–º–æ–Ω–µ—Ç–∞ —Å –ø—Ä–æ—Ç–æ–∫–æ–ª—å–Ω–æ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–æ–π.",
      paragraph:
        "–ù–∞—à–∞ –ª–µ–≥–µ–Ω–¥–∞ ‚Äî —á–µ—Å–Ω–æ–∫ –ø—Ä–æ—Ç–∏–≤ –≤–∞–º–ø–∏—Ä–æ–≤ —Ä—ã–Ω–∫–∞: FUD, —Å–∫–∞–º–∞ –∏ –ø–∞–Ω–∏–∫–∏. –ü—Ä–∞–≤–∏–ª–∞ –∑–∞–¥–∞–Ω—ã –∫–æ–¥–æ–º: —á–µ—Å—Ç–Ω—ã–π –∑–∞–ø—É—Å–∫ (fair launch), 0% –Ω–∞–ª–æ–≥, –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞, –ø—Ä–∞–≤–∞ –Ω–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç –æ—Ç–∫–∞–∑–∞–Ω—ã. –°–º–µ—Ö –ª–µ—á–∏—Ç, –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ –∑–∞—â–∏—â–∞–µ—Ç.",
      ctaBuy: "–ö—É–ø–∏—Ç—å $GARLIC",
      ctaDocs: "–õ–µ–≥–µ–Ω–¥–∞ –∏ –ø—Ä–∞–≤–∏–ª–∞",
      note: "–ù–∏–∫–∞–∫–∏—Ö –æ–±–µ—â–∞–Ω–∏–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏. –¢–æ–ª—å–∫–æ –º–µ–º—ã –∏ –ø—Ä–∞–≤–∏–ª–∞.",
    },
    legend: {
      kicker: "–õ–µ–≥–µ–Ω–¥–∞",
      title: "–ß–µ—Å–Ω–æ–∫ –ø—Ä–æ—Ç–∏–≤ –≤–∞–º–ø–∏—Ä–æ–≤ —Ä—ã–Ω–∫–∞",
      p1: "–ù–∞ –∫—Ä–∏–ø—Ç–æ—Ä—ã–Ω–∫–µ –ø–æ–ª–Ω–æ ¬´–≤–∞–º–ø–∏—Ä–æ–≤¬ª: FUD, —Å–∫–∞–º-–ø–∞–º–ø–µ—Ä—ã, ¬´–Ω–æ—á–Ω—ã–µ –æ—Ö–æ—Ç–Ω–∏–∫–∏¬ª –∑–∞ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å—é. $GARLIC ‚Äî –º–µ–º, –∫–æ—Ç–æ—Ä—ã–π –ø–∞—Ö–Ω–µ—Ç –ø–æ–±–µ–¥–æ–π: —á–µ–º —Å–∏–ª—å–Ω–µ–µ –∑–∞–ø–∞—Ö, —Ç–µ–º –¥–∞–ª—å—à–µ –æ—Ç –Ω–∞—Å –Ω–µ—á–∏—Å—Ç—å.",
      p2: "–ú–µ–º ‚Äî —ç—Ç–æ —Å–º–µ—Ö –∏ –∫—É–ª—å—Ç—É—Ä–∞, –Ω–æ –ø—Ä–∞–≤–∏–ª–∞ ‚Äî —ç—Ç–æ –∑–∞—â–∏—Ç–∞. –ü–æ—ç—Ç–æ–º—É —É –Ω–∞—Å –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞: –Ω–∏–∫–∞–∫–∏—Ö —Å–∫—Ä—ã—Ç—ã—Ö —Ç—É–º–±–ª–µ—Ä–æ–≤, –Ω–∏–∫–∞–∫–∏—Ö –Ω–∞–ª–æ–≥–æ–≤ –Ω–∞ —Ç—Ä–µ–π–¥—ã, –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å –∑–∞–ø–µ—Ä—Ç–∞, –ø—Ä–∞–≤–∞ ‚Äî –≤ –Ω–∏–∫—É–¥–∞.",
      quotes: [
        "‚Äú–ü–∞—Ö–Ω–µ—Ç –ø—Ä–æ–±–æ–µ–º: —Å–æ–ª–Ω–µ—á–Ω—ã–µ —Å–≤–µ—á–∏ –ø—Ä–æ–∂–∏–≥–∞—é—Ç —Ç—å–º—É.‚Äù",
        "‚Äú–í–∞–º–ø–∏—Ä—ã —Ä—ã–Ω–∫–∞ –Ω–µ –ª—é–±—è—Ç —á–µ—Å–Ω–æ–∫. –•–æ—Ä–æ—à–æ, —á—Ç–æ –º—ã ‚Äî –≤–µ—Å—å –ø–æ–≥—Ä–µ–±.‚Äù",
        "‚ÄúZero-tax –∏ renounced ‚Äî –º–µ–Ω—å—à–µ –º–µ—Å—Ç–∞ –¥–ª—è –º–∞–≥–∏–∏ –∑–∞ –∫—É–ª–∏—Å–∞–º–∏.‚Äù",
      ],
    },
    policy: {
      kicker: "–ü–æ–ª–∏—Ç–∏–∫–∞",
      title: "–ñ—ë—Å—Ç–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞, –º—è–≥–∫–∏–π —é–º–æ—Ä",
      caption: "–û–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω—ã –∑–∞—Ä–∞–Ω–µ–µ. –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞.",
      c1t: "–ù–∞–ª–æ–≥ –Ω–∞ —Ç—Ä–µ–π–¥—ã ‚Äî 0%",
      c1p: "–¢–æ—Ä–≥–æ–≤–ª—è –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞. –í–∞—à PnL ‚Äî —ç—Ç–æ —Ä—ã–Ω–æ–∫, –∞ –Ω–µ —Å—Ç—Ä–æ–∫–∞ –∫–æ–¥–∞.",
      c2t: "LP ‚Äî –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞",
      c2p: "–õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å –∑–∞–ø–µ—Ä—Ç–∞ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º/–ª–æ–∫–æ–º. –í–∞–º–ø–∏—Ä—ã –Ω–µ –≤—ã—Å–æ—Å—É—Ç –ø—É–ª –Ω–æ—á—å—é.",
      c3t: "–ü—Ä–∞–≤–∞ ‚Äî –æ—Ç–∫–∞–∑–∞–Ω—ã",
      c3p: "–ö–æ–Ω—Ç—Ä–∞–∫—Ç renounced: –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–¥–º–µ–Ω–∏—Ç –ø—Ä–∞–≤–∏–ª–∞ –Ω–∞ –ª–µ—Ç—É.",
      c4t: "–ß–µ—Å—Ç–Ω—ã–π –∑–∞–ø—É—Å–∫",
      c4p: "–ù–∏–∫–∞–∫–∏—Ö –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∞–ª–ª–æ–∫–∞—Ü–∏–π –∑–∞ —Å—Ü–µ–Ω–æ–π. –û–¥–∏–Ω —Å—Ç–∞—Ä—Ç –¥–ª—è –≤—Å–µ—Ö.",
      badge: "–ù–∏–∫–∞–∫–∏—Ö –æ–±–µ—â–∞–Ω–∏–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏. –¢–æ–ª—å–∫–æ –º–µ–º –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞.",
    },
    signals: {
      kicker: "–°–∏–≥–Ω–∞–ª—ã",
      title: "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –º–µ–º –∂–∏–≤—ã–º",
      cards: [
        {
          t: "–ú–∞—Å–∫–æ—Ç: –≥–æ–ª–æ–≤–∫–∞ —á–µ—Å–Ω–æ–∫–∞",
          p: "–°–º–µ—à–Ω–æ–π, –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ üßÑ. –ü–∞–∫—É–µ–º —ç–º–æ—Ü–∏–∏ –≤ –æ–±—Ä–∞–∑, –∞ –Ω–µ –≤ –æ–±–µ—â–∞–Ω–∏—è.",
        },
        {
          t: "–ú–µ–º-—è–∑—ã–∫",
          p: "–í–∞–º–ø–∏—Ä—ã —Ä—ã–Ω–∫–∞, —Å–æ–ª–Ω–µ—á–Ω—ã–µ —Å–≤–µ—á–∏, –∑–∞–ø–∞—Ö –ø–æ–±–µ–¥—ã. –ö–æ–Ω—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç—Å—è —Ñ–æ—Ä–≤–∞—Ä–¥–∏—Ç—å.",
        },
        {
          t: "–í–∏–∑—É–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞",
          p: "–°–≤–µ—Ç–ª–∞—è –ø–∞–ª–∏—Ç—Ä–∞, —Å–∫–µ–≤–¥–æ-—Å—Ç–∏–∫–µ—Ä—ã, —à—É—Ç–æ—á–Ω—ã–µ —è—Ä–ª—ã–∫–∏. –£–∑–Ω–∞–≤–∞–µ–º–æ –≤ –ª–µ–Ω—Ç–µ.",
        },
        {
          t: "–§–æ—Ä–º–∞–ª—å–Ω–∞—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞",
          p: "–ù–æ—Ä–º—ã, –∫–∞–∫ —É –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤: –º–∏–Ω–∏–º—É–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –º–∞–∫—Å–∏–º—É–º –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç–∏.",
        },
      ],
    },
    tokenomics: {
      kicker: "–¢–æ–∫–µ–Ω–æ–º–∏–∫–∞",
      title: "–ü—Ä–æ–∑—Ä–∞—á–Ω–æ –∏ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ",
      caption: "–ú–µ–Ω—å—à–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ‚Äî –º–µ–Ω—å—à–µ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ—Å—Ç–∏. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–∑–≤—É—á–µ–Ω–∞ –∑–∞—Ä–∞–Ω–µ–µ.",
      supply: "–û–±—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
      supplyVal: "1 000 000 000 $GARLIC",
      items: [
        { t: "–ù–∞–ª–æ–≥ –Ω–∞ —Ç—Ä–µ–π–¥—ã", v: "0%" },
        { t: "–õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å", v: "LP lock" },
        { t: "–ü—Ä–∞–≤–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞", v: "Renounced" },
        { t: "–ó–∞–ø—É—Å–∫", v: "Fair launch" },
      ],
      foot: "–ù–µ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —Å–µ–π–ª–æ–≤. –ù–µ—Ç ¬´–º–∞–≥–∏—á–µ—Å–∫–∏—Ö –∫–Ω–æ–ø–æ–∫¬ª. –¢–æ–ª—å–∫–æ –º–µ–º –∏ —Ä—ã–Ω–æ–∫.",
    },
    roadmap: {
      kicker: "–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞",
      title: "–û—Ç –∑–∞–ø–∞—Ö–∞ ‚Äî –∫ –ª–µ–≥–µ–Ω–¥–µ",
      p1: ["–ó–∞–ø—É—Å–∫ —Å–∞–π—Ç–∞ –∏ —Å–æ—Ü—Å–µ—Ç–µ–π", "–õ–∏—Å—Ç–∏–Ω–≥ –Ω–∞ DEX", "LP lock, renounced", "–ù–∞—Ä—Ä–∞—Ç–∏–≤ ¬´–∞–Ω—Ç–∏-–≤–∞–º–ø–∏—Ä¬ª"],
      p2: ["NFT ¬´Cloves¬ª –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö", "–ö–æ–ª–ª–∞–±—ã —Å —Ö—É–¥–æ–∂–Ω–∏–∫–∞–º–∏", "–ö–æ–º—å—é–Ω–∏—Ç–∏-–º–µ–º–µ—Ç–∏–∫–∞"],
      p3: ["–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Ç—Ä–µ–∫–µ—Ä–∞–º–∏", "–¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–≤–µ—Å—Ç—ã", "IRL-–∞—Ç—Ä–∏–±—É—Ç–∏–∫–∞"],
      note: "–í—Å—ë ‚Äî –±–µ–∑ –æ–±–µ—â–∞–Ω–∏–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏. –†–∞–∑–≤–∏–≤–∞–µ–º –∫—É–ª—å—Ç—É—Ä—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª–∞.",
    },
    how: {
      kicker: "–ö–∞–∫ –∫—É–ø–∏—Ç—å",
      title: "–ü–∞—Ä–∞ –∫–ª–∏–∫–æ–≤ ‚Äî –∏ —Ç—ã —Å –Ω–∞–º–∏",
      steps: [
        {
          t: "1) –ü–æ–¥–∫–ª—é—á–∏ –∫–æ—à–µ–ª—ë–∫",
          p: "MetaMask –∏–ª–∏ –ª—é–±–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π. –ü—Ä–æ–≤–µ—Ä—å —Å–µ—Ç—å –∏ –∫–æ–º–∏—Å—Å–∏—é.",
        },
        {
          t: "2) –í—ã–±–µ—Ä–∏ –ø–∞—Ä—É –∏ —Ä–∞–∑–º–µ—Ä",
          p: "–ü–æ–¥–±–µ—Ä–∏ —Ä–∞–∑–º–µ—Ä —Å–¥–µ–ª–∫–∏, —É—á—Ç–∏ –ø—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏–µ –∏ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å.",
        },
        {
          t: "3) –ü–æ–¥—Ç–≤–µ—Ä–¥–∏ –æ–±–º–µ–Ω",
          p: "–ñ–¥–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏. –ü–ª–∞—Ç–∏ —Ç–æ–ª—å–∫–æ –≥–∞–∑ ‚Äî –Ω–∞–ª–æ–≥–æ–≤ –Ω–µ—Ç.",
        },
        {
          t: "4) –ë–µ–∑–æ–ø. —á–µ–∫-–ª–∏—Å—Ç",
          p: "–ù–µ –∫–ª–∏–∫–∞–π –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–µ. –ù–∞—à–∏ –ø—Ä–∞–≤–∏–ª–∞ ‚Äî –ø—É–±–ª–∏—á–Ω—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º—ã.",
        },
      ],
      cta: "–ö—É–ø–∏—Ç—å $GARLIC",
      dex: "DEX",
      docs: "–ö–æ–Ω—Ç—Ä–∞–∫—Ç",
    },
    community: {
      kicker: "–ö–æ–º—å—é–Ω–∏—Ç–∏",
      title: "–ú–µ–º –∂–∏–≤—ë—Ç –≤ –ª—é–¥—è—Ö",
      p: "–ß–µ—Å–Ω–æ–∫ ‚Äî –ø—Ä–æ—Ç–∏–≤ –≤–∞–º–ø–∏—Ä–æ–≤ —Ä—ã–Ω–∫–∞, –Ω–æ –∑–∞ –ª—é–¥–µ–π. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ —á–∞—Ç—É, –∫–∏–¥–∞–π –º–µ–º—ã, –ø—Ä–∏–¥—É–º—ã–≤–∞–π –Ω–∞–∫–ª–µ–π–∫–∏, —Ä–∞–∑–∂–∏–≥–∞–π ¬´—Å–æ–ª–Ω–µ—á–Ω—ã–µ —Å–≤–µ—á–∏¬ª.",
      tg: "Telegram",
      x: "X (Twitter)",
      gh: "GitHub",
    },
    footer: {
      p1: "–ù–∏ —ç—Ç–æ—Ç —Å–∞–π—Ç, –Ω–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –¥–∞—é—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Å–æ–≤–µ—Ç–æ–≤. –ú–µ–º ‚Äî —ç—Ç–æ –∫—É–ª—å—Ç—É—Ä–∞. –ü—Ä–∞–≤–∏–ª–∞ ‚Äî —ç—Ç–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞.",
      p2: "¬© $GARLIC. –ù–æ–ª—å –Ω–∞–ª–æ–≥–æ–≤. LP lock. Renounced. Fair launch.",
    },
    switcher: {
      title: "–Ø–∑—ã–∫",
      ru: "–†—É—Å—Å–∫–∏–π",
      en: "English",
      hi: "‡§π‡§ø‡§Ç‡§¶‡•Ä",
      id: "Indonesia",
    },
  },

  // –∞–Ω–≥–ª. –≤–µ—Ä—Å–∏—è –∫–æ—Ä–æ—Ç–∫–æ, —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç —è–∑—ã–∫
  en: {
    nav: { approach: "Approach", policy: "Policy", tokenomics: "Tokenomics", roadmap: "Roadmap", buy: "Buy" },
    trustStrip: ["FAIR LAUNCH", "ZERO TAX", "LP LOCK", "RENOUNCED"],
    hero: {
      tags: ["discipline", "liquidity-first", "community"],
      titleTop: "GARLIC",
      titleBottom: "a meme with protocol discipline.",
      paragraph:
        "Legend: garlic vs market vampires ‚Äî FUD, scams and panic. Rules in code: fair launch, 0% tax, LP locked, renounced ownership.",
      ctaBuy: "Buy $GARLIC",
      ctaDocs: "Legend & rules",
      note: "No promises of profit. Only memes and rules.",
    },
    legend: {
      kicker: "Legend",
      title: "Garlic vs market vampires",
      p1: "Vampires are FUD and scammers. Garlic smells like victory.",
      p2: "Memes for fun. Rules for safety. Zero tax, LP lock, renounced.",
      quotes: [
        "‚ÄúSmells like breakout. Sun candles burn the night.‚Äù",
        "‚ÄúVampires hate garlic. We are the whole pantry.‚Äù",
        "‚ÄúZero-tax and renounced ‚Äî fewer backstage switches.‚Äù",
      ],
    },
    policy: {
      kicker: "Policy",
      title: "Hard rules, soft humor",
      caption: "Clear settings ‚Üí predictable token behavior.",
      c1t: "Trade tax ‚Äî 0%",
      c1p: "No contract taxes. Your PnL is market only.",
      c2t: "LP locked",
      c2p: "No nightly draining. Vampires stay hungry.",
      c3t: "Renounced",
      c3p: "No one flips switches at night.",
      c4t: "Fair launch",
      c4p: "One start for everyone. No backroom allocations.",
      badge: "No profit promises.",
    },
    signals: {
      kicker: "Signals",
      title: "What keeps the meme alive",
      cards: [
        { t: "Mascot: garlic head", p: "Friendly, shareable üßÑ." },
        { t: "Meme language", p: "Vampires, sun candles, smell of victory." },
        { t: "Visual system", p: "Sticker-like accents, bright palette." },
        { t: "Protocol discipline", p: "Minimal params, max predictability." },
      ],
    },
    tokenomics: {
      kicker: "Tokenomics",
      title: "Transparent & predictable",
      caption: "Fewer parameters ‚Äî less uncertainty.",
      supply: "Total supply",
      supplyVal: "1,000,000,000 $GARLIC",
      items: [
        { t: "Trade tax", v: "0%" },
        { t: "Liquidity", v: "LP lock" },
        { t: "Ownership", v: "Renounced" },
        { t: "Launch", v: "Fair" },
      ],
      foot: "No private sales. No magic buttons.",
    },
    roadmap: {
      kicker: "Roadmap",
      title: "From smell to legend",
      p1: ["Website & socials", "DEX launch", "LP lock, renounced", "Narrative set"],
      p2: ["NFT ‚ÄúCloves‚Äù", "Artist collabs", "Community memetics"],
      p3: ["Tracker integrations", "Quests", "IRL merch"],
      note: "No profit promises. Culture and rules.",
    },
    how: {
      kicker: "How to buy",
      title: "A couple clicks",
      steps: [
        { t: "1) Connect wallet", p: "MetaMask or any compatible." },
        { t: "2) Choose pair & size", p: "Mind slippage and volatility." },
        { t: "3) Confirm swap", p: "Pay gas only ‚Äî no tax." },
        { t: "4) Safety checklist", p: "Rules are public and verifiable." },
      ],
      cta: "Buy $GARLIC",
      dex: "DEX",
      docs: "Contract",
    },
    community: {
      kicker: "Community",
      title: "Memes live in people",
      p: "Join chat, share memes, fuel the sun candles.",
      tg: "Telegram",
      x: "X (Twitter)",
      gh: "GitHub",
    },
    footer: {
      p1: "No financial advice. Memes are culture. Rules are discipline.",
      p2: "¬© $GARLIC. Zero tax. LP lock. Renounced. Fair launch.",
    },
    switcher: { title: "Language", ru: "–†—É—Å—Å–∫–∏–π", en: "English", hi: "‡§π‡§ø‡§Ç‡§¶‡•Ä", id: "Indonesia" },
  },

  hi: { nav: { approach: "‡§¶‡•É‡§∑‡•ç‡§ü‡§ø‡§ï‡•ã‡§£", policy: "‡§®‡•Ä‡§§‡§ø", tokenomics: "‡§ü‡•ã‡§ï‡§®‡•ã‡§Æ‡§ø‡§ï‡•ç‡§∏", roadmap: "‡§∞‡•ã‡§°‡§Æ‡•à‡§™", buy: "‡§ñ‡§∞‡•Ä‡§¶‡•á‡§Ç" }, trustStrip: ["FAIR LAUNCH","ZERO TAX","LP LOCK","RENOUNCED"], hero: { tags: ["‡§Ö‡§®‡•Å‡§∂‡§æ‡§∏‡§®","‡§≤‡§ø‡§ï‡•ç‡§µ‡§ø‡§°‡§ø‡§ü‡•Ä","‡§∏‡§Æ‡•Å‡§¶‡§æ‡§Ø"], titleTop: "GARLIC", titleBottom: "‡§Æ‡•Ä‡§Æ, ‡§™‡§∞ ‡§™‡•ç‡§∞‡•ã‡§ü‡•ã‡§ï‡•â‡§≤ ‡§Ö‡§®‡•Å‡§∂‡§æ‡§∏‡§® ‡§ï‡•á ‡§∏‡§æ‡§•.", paragraph: "‡§≤‡§ø‡§ú‡•á‡§Ç‡§°: ‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§ï‡•á ‡§µ‡•à‡§Æ‡•ç‡§™‡§æ‡§Ø‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§ñ‡§ø‡§≤‡§æ‡§´ ‡§≤‡§π‡§∏‡•Å‡§®. 0% ‡§ü‡•à‡§ï‡•ç‡§∏, LP ‡§≤‡•â‡§ï, renounced.", ctaBuy: "‡§ñ‡§∞‡•Ä‡§¶‡•á‡§Ç $GARLIC", ctaDocs: "‡§®‡§ø‡§Ø‡§Æ" }, switcher: { title: "‡§≠‡§æ‡§∑‡§æ", ru: "–†—É—Å—Å–∫–∏–π", en: "English", hi: "‡§π‡§ø‡§Ç‡§¶‡•Ä", id: "Indonesia" } },
  id: { nav: { approach: "Pendekatan", policy: "Kebijakan", tokenomics: "Tokenomik", roadmap: "Roadmap", buy: "Beli" }, trustStrip: ["FAIR LAUNCH","ZERO TAX","LP LOCK","RENOUNCED"], hero: { tags: ["disiplin","likuiditas","komunitas"], titleTop: "GARLIC", titleBottom: "meme dengan disiplin protokol.", paragraph: "Legenda: bawang putih vs vampir pasar. 0% pajak, LP terkunci, kepemilikan dilepas.", ctaBuy: "Beli $GARLIC", ctaDocs: "Aturan" }, switcher: { title: "Bahasa", ru: "–†—É—Å—Å–∫–∏–π", en: "English", hi: "‡§π‡§ø‡§Ç‡§¶‡•Ä", id: "Indonesia" } },
};

/* ==================== –¢—Ä–∞–Ω—Å–ª—è—Ç–æ—Ä ==================== */
function getDeep(obj, path) {
  if (!obj) return null;
  const parts = path.split(".");
  let cur = obj;
  for (const p of parts) {
    cur = cur?.[p];
    if (cur == null) return null;
  }
  return cur;
}
const LangContext = createContext({ lang: FALLBACK, setLang: () => {} });
function useT() {
  const { lang } = useContext(LangContext);
  return (path) => getDeep(DICT[lang], path) ?? getDeep(DICT[FALLBACK], path) ?? "";
}

/* ==================== –í—ë—Ä—Å—Ç–æ—á–Ω—ã–µ –∞—Ç–æ–º—ã ==================== */
function Tag({ children }) {
  return (
    <span className="inline-flex items-center rounded-full border border-neutral-800/70 bg-neutral-900/60 px-3 py-1 text-xs tracking-wide">
      {children}
    </span>
  );
}

function SectionKicker({ children }) {
  return <div className="text-xs tracking-widest text-neutral-400 uppercase">{children}</div>;
}

function H2({ children }) {
  return <h2 className="text-2xl md:text-4xl font-semibold tracking-tight">{children}</h2>;
}

function Card({ children, className }) {
  return (
    <div className={cx("rounded-2xl border border-neutral-800/80 bg-neutral-900/50 p-5 md:p-6", className)}>
      {children}
    </div>
  );
}

function Ribbon() {
  const t = useT();
  const items = t("trustStrip");
  return (
    <div className="relative isolate my-6 overflow-hidden">
      <div className="flex animate-[ribbon_30s_linear_infinite] whitespace-nowrap border-y border-neutral-800/80 py-2 text-xs tracking-[0.2em]">
        {[...Array(10)].map((_, i) => (
          <span key={i} className="mx-6 text-neutral-300">
            {items.join(" ‚Ä¢ ")}
          </span>
        ))}
      </div>
      <style jsx>{`
        @keyframes ribbon {
          0% {
            transform: translateX(0);
          }
          100% {
            transform: translateX(-50%);
          }
        }
      `}</style>
    </div>
  );
}

/* ======================= Language Switcher (custom dropdown) ======================= */
function LangSwitcher() {
  const { lang, setLang } = useContext(LangContext);
  const t = useT();
  const [open, setOpen] = useState(false);
  const ref = useRef(null);

  useEffect(() => {
    const onDoc = (e) => {
      if (!ref.current) return;
      if (!ref.current.contains(e.target)) setOpen(false);
    };
    document.addEventListener("click", onDoc);
    return () => document.removeEventListener("click", onDoc);
  }, []);

  const items = [
    { code: "ru", label: t("switcher.ru") || "–†—É—Å—Å–∫–∏–π" },
    { code: "en", label: t("switcher.en") || "English" },
    { code: "hi", label: t("switcher.hi") || "‡§π‡§ø‡§Ç‡§¶‡•Ä" },
    { code: "id", label: t("switcher.id") || "Indonesia" },
  ];

  return (
    <div className="relative" ref={ref}>
      <button
        onClick={() => setOpen((v) => !v)}
        className="inline-flex items-center gap-2 rounded-xl border border-neutral-800/70 bg-neutral-900/60 px-3 py-1.5 text-sm"
      >
        <span className="i-twemoji-earth-africa inline-block h-4 w-4" />
        <span>{t("switcher.title") || "–Ø–∑—ã–∫"}</span>
        <span className="text-neutral-400">({lang.toUpperCase()})</span>
      </button>
      {open && (
        <div className="absolute right-0 mt-2 w-44 rounded-xl border border-neutral-800/70 bg-neutral-900/95 p-1 shadow-xl backdrop-blur">
          {items.map((it) => (
            <button
              key={it.code}
              onClick={() => {
                setLang(it.code);
                if (isClient) localStorage.setItem("lang", it.code);
                setOpen(false);
              }}
              className={cx(
                "flex w-full items-center justify-between rounded-lg px-3 py-2 text-left text-sm hover:bg-neutral-800",
                lang === it.code && "bg-neutral-800"
              )}
            >
              <span>{it.label}</span>
              {lang === it.code && <span className="i-heroicons-check-16-solid" />}
            </button>
          ))}
        </div>
      )}
    </div>
  );
}

/* ======================= Hero ======================= */
function Hero() {
  const t = useT();
  return (
    <section className="relative overflow-hidden pt-16 md:pt-24">
      <div className="mx-auto max-w-6xl px-4">
        <div className="flex flex-col items-start gap-6 md:gap-8">
          <div className="flex flex-wrap items-center gap-2">
            {t("hero.tags").map((x, i) => (
              <Tag key={i}>{x}</Tag>
            ))}
          </div>

          <div className="relative">
            <h1 className="text-5xl md:text-7xl font-black tracking-tight">
              {t("hero.titleTop")}
              <span className="ml-3 inline-block align-bottom text-xl font-medium text-neutral-400">($GARLIC)</span>
            </h1>
            <p className="mt-3 text-xl md:text-2xl text-neutral-300">{t("hero.titleBottom")}</p>
          </div>

          <p className="max-w-3xl text-neutral-300">{t("hero.paragraph")}</p>

          <div className="flex flex-col sm:flex-row items-start gap-3">
            <a
              href="#buy"
              className="inline-flex items-center gap-2 rounded-xl bg-white px-4 py-2 text-black transition hover:opacity-90"
            >
              <span className="i-heroicons-arrow-down-tray-16-solid" />
              {t("hero.ctaBuy")}
            </a>
            <a
              href="#policy"
              className="inline-flex items-center gap-2 rounded-xl border border-neutral-800/70 bg-neutral-900/60 px-4 py-2 transition hover:bg-neutral-800"
            >
              <span className="i-heroicons-command-line-16-solid" />
              {t("hero.ctaDocs")}
            </a>
          </div>

          <Ribbon />

          <p className="text-xs text-neutral-500">{t("hero.note")}</p>
        </div>
      </div>

      {/* Decor */}
      <div className="pointer-events-none absolute -right-20 -top-20 h-[400px] w-[400px] rounded-full bg-[radial-gradient(circle_at_center,rgba(255,255,255,0.08),transparent_60%)] blur-2xl" />
      <div className="pointer-events-none absolute -left-10 top-40 h-[300px] w-[300px] rounded-full bg-[radial-gradient(circle_at_center,rgba(190,255,190,0.06),transparent_60%)] blur-2xl" />
    </section>
  );
}

/* ======================= Legend ======================= */
function Legend() {
  const t = useT();
  const quotes = t("legend.quotes") || [];
  return (
    <section id="approach" className="mx-auto max-w-6xl px-4 py-14 md:py-20">
      <div className="grid gap-6 md:grid-cols-2">
        <div>
          <SectionKicker>{t("legend.kicker")}</SectionKicker>
          <H2>{t("legend.title")}</H2>
          <p className="mt-4 text-neutral-300">{t("legend.p1")}</p>
          <p className="mt-3 text-neutral-300">{t("legend.p2")}</p>
        </div>
        <div className="grid gap-3">
          {quotes.map((q, i) => (
            <Card key={i} className="text-neutral-200">{q}</Card>
          ))}
        </div>
      </div>
    </section>
  );
}

/* ======================= Policy ======================= */
function Policy() {
  const t = useT();
  const items = [
    { t: t("policy.c1t"), p: t("policy.c1p") },
    { t: t("policy.c2t"), p: t("policy.c2p") },
    { t: t("policy.c3t"), p: t("policy.c3p") },
    { t: t("policy.c4t"), p: t("policy.c4p") },
  ];
  return (
    <section id="policy" className="mx-auto max-w-6xl px-4 py-14 md:py-20">
      <div className="mb-8">
        <SectionKicker>{t("policy.kicker")}</SectionKicker>
        <H2>{t("policy.title")}</H2>
        <p className="mt-3 max-w-3xl text-neutral-300">{t("policy.caption")}</p>
      </div>
      <div className="grid gap-4 md:grid-cols-2">
        {items.map((it, i) => (
          <Card key={i}>
            <div className="flex items-start gap-3">
              <div className="mt-1 h-6 w-6 shrink-0 rounded-full bg-neutral-800/80" />
              <div>
                <div className="font-semibold">{it.t}</div>
                <div className="mt-1 text-neutral-300">{it.p}</div>
              </div>
            </div>
          </Card>
        ))}
      </div>
      <div className="mt-4 text-xs text-neutral-500">{t("policy.badge")}</div>
    </section>
  );
}

/* ======================= Signals ======================= */
function Signals() {
  const t = useT();
  const cards = t("signals.cards") || [];
  return (
    <section className="mx-auto max-w-6xl px-4 py-14 md:py-20">
      <div className="mb-8">
        <SectionKicker>{t("signals.kicker")}</SectionKicker>
        <H2>{t("signals.title")}</H2>
      </div>
      <div className="grid gap-4 md:grid-cols-2">
        {cards.map((c, i) => (
          <Card key={i}>
            <div className="font-semibold">{c.t}</div>
            <div className="mt-1 text-neutral-300">{c.p}</div>
          </Card>
        ))}
      </div>
    </section>
  );
}

/* ======================= Tokenomics ======================= */
function Tokenomics() {
  const t = useT();
  const items = t("tokenomics.items") || [];
  return (
    <section id="tokenomics" className="mx-auto max-w-6xl px-4 py-14 md:py-20">
      <div className="mb-8">
        <SectionKicker>{t("tokenomics.kicker")}</SectionKicker>
        <H2>{t("tokenomics.title")}</H2>
        <p className="mt-3 text-neutral-300">{t("tokenomics.caption")}</p>
      </div>
      <div className="grid gap-4 md:grid-cols-3">
        <Card>
          <div className="text-sm text-neutral-400">{t("tokenomics.supply")}</div>
          <div className="mt-1 text-xl font-semibold">{t("tokenomics.supplyVal")}</div>
          <div className="mt-4 grid gap-2">
            {items.map((x, i) => (
              <div key={i} className="flex items-center justify-between rounded-lg border border-neutral-800/70 bg-neutral-900/50 px-3 py-2">
                <span>{x.t}</span>
                <span className="text-neutral-300">{x.v}</span>
              </div>
            ))}
          </div>
          <div className="mt-3 text-xs text-neutral-500">{t("tokenomics.foot")}</div>
        </Card>
        <Card className="md:col-span-2">
          <div className="mb-3 text-sm text-neutral-400">Notes</div>
          <ul className="list-disc pl-5 text-neutral-300">
            <li>–ù–µ—Ç —Å–∫—Ä—ã—Ç—ã—Ö –Ω–∞–ª–æ–≥–æ–≤, —Å–∫—Ä—ã—Ç—ã—Ö —Ç—É–º–±–ª–µ—Ä–æ–≤, ¬´—ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö¬ª —Ñ—É–Ω–∫—Ü–∏–π.</li>
            <li>LP lock & renounced ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ–º–æ –≤ —ç–∫—Å–ø–ª–æ—Ä–µ—Ä–µ.</li>
            <li>–ú—ã —Å—Ç—Ä–æ–∏–º –∫—É–ª—å—Ç—É—Ä—É, –∞ –Ω–µ –ø—Ä–æ–¥–∞—ë–º –æ–±–µ—â–∞–Ω–∏—è.</li>
          </ul>
        </Card>
      </div>
    </section>
  );
}

/* ======================= Roadmap ======================= */
function Roadmap() {
  const t = useT();
  const p1 = t("roadmap.p1") || [];
  const p2 = t("roadmap.p2") || [];
  const p3 = t("roadmap.p3") || [];
  return (
    <section id="roadmap" className="mx-auto max-w-6xl px-4 py-14 md:py-20">
      <div className="mb-8">
        <SectionKicker>{t("roadmap.kicker")}</SectionKicker>
        <H2>{t("roadmap.title")}</H2>
      </div>
      <div className="grid gap-4 md:grid-cols-3">
        {[p1, p2, p3].map((arr, i) => (
          <Card key={i}>
            <ol className="list-decimal pl-5 text-neutral-300">
              {arr.map((x, idx) => (
                <li key={idx} className="mb-2">{x}</li>
              ))}
            </ol>
          </Card>
        ))}
      </div>
      <div className="mt-4 text-xs text-neutral-500">{t("roadmap.note")}</div>
    </section>
  );
}

/* ======================= How to buy ======================= */
function HowToBuy() {
  const t = useT();
  const steps = t("how.steps") || [];
  return (
    <section id="buy" className="mx-auto max-w-6xl px-4 py-14 md:py-20">
      <div className="mb-8">
        <SectionKicker>{t("how.kicker")}</SectionKicker>
        <H2>{t("how.title")}</H2>
      </div>
      <div className="grid gap-4 md:grid-cols-2">
        {steps.map((s, i) => (
          <Card key={i}>
            <div className="font-semibold">{s.t}</div>
            <div className="mt-1 text-neutral-300">{s.p}</div>
          </Card>
        ))}
        <Card>
          <div className="mb-3 text-sm text-neutral-400">Links</div>
          <div className="flex flex-wrap gap-2">
            <a href="#" className="inline-flex items-center gap-2 rounded-xl bg-white px-4 py-2 text-black transition hover:opacity-90">
              <span className="i-heroicons-banknotes-16-solid" />
              {t("how.dex")}
            </a>
            <a href="#" className="inline-flex items-center gap-2 rounded-xl border border-neutral-800/70 bg-neutral-900/60 px-4 py-2 transition hover:bg-neutral-800">
              <span className="i-heroicons-document-text-16-solid" />
              {t("how.docs")}
            </a>
          </div>
          <div className="mt-3 text-xs text-neutral-500">–ü—Ä–æ–≤–µ—Ä—å –∞–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ —Ç–æ–ª—å–∫–æ –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö.</div>
        </Card>
        <Card>
          <div className="mb-3 text-sm text-neutral-400">Checklist</div>
          <ul className="list-disc pl-5 text-neutral-300">
            <li>–°–≤–µ—Ä—å –¥–æ–º–µ–Ω –∏ —Å—Å—ã–ª–∫–∏.</li>
            <li>–ù–∏–∫–æ–º—É –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–π seed.</li>
            <li>–£—á–∏—Ç—ã–≤–∞–π –ø—Ä–æ—Å–∫–∞–ª—å–∑—ã–≤–∞–Ω–∏–µ, –≥–∞–∑, –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å.</li>
          </ul>
        </Card>
      </div>
    </section>
  );
}

/* ======================= Community ======================= */
function Community() {
  const t = useT();
  return (
    <section className="mx-auto max-w-6xl px-4 py-14 md:py-20">
      <div className="mb-8">
        <SectionKicker>{t("community.kicker")}</SectionKicker>
        <H2>{t("community.title")}</H2>
      </div>
      <Card>
        <p className="text-neutral-300">{t("community.p")}</p>
        <div className="mt-4 flex flex-wrap gap-2">
          <a href="#" className="inline-flex items-center gap-2 rounded-xl bg-white px-4 py-2 text-black transition hover:opacity-90">
            <span className="i-simple-icons-telegram" />
            {t("community.tg")}
          </a>
          <a href="#" className="inline-flex items-center gap-2 rounded-xl border border-neutral-800/70 bg-neutral-900/60 px-4 py-2 transition hover:bg-neutral-800">
            <span className="i-simple-icons-x" />
            {t("community.x")}
          </a>
          <a href="#" className="inline-flex items-center gap-2 rounded-xl border border-neutral-800/70 bg-neutral-900/60 px-4 py-2 transition hover:bg-neutral-800">
            <span className="i-simple-icons-github" />
            {t("community.gh")}
          </a>
        </div>
      </Card>
    </section>
  );
}

/* ======================= Footer ======================= */
function Footer() {
  const t = useT();
  return (
    <footer className="mx-auto max-w-6xl px-4 pb-16">
      <div className="text-xs text-neutral-500">{t("footer.p1")}</div>
      <div className="mt-1 text-xs text-neutral-600">{t("footer.p2")}</div>
    </footer>
  );
}

/* ======================= –ù–∞–≤–±–∞—Ä ======================= */
function Navbar() {
  const t = useT();
  return (
    <div className="sticky top-0 z-40 border-b border-neutral-800/70 bg-neutral-950/80 backdrop-blur">
      <div className="mx-auto flex max-w-6xl items-center justify-between px-4 py-3">
        <div className="flex items-center gap-3">
          <div className="h-6 w-6 rounded-md bg-white" />
          <div className="text-sm font-bold tracking-tight">$GARLIC</div>
        </div>
        <nav className="hidden gap-6 md:flex">
          <a href="#approach" className="text-sm text-neutral-300 hover:text-white">
            {t("nav.approach")}
          </a>
          <a href="#policy" className="text-sm text-neutral-300 hover:text-white">
            {t("nav.policy")}
          </a>
          <a href="#tokenomics" className="text-sm text-neutral-300 hover:text-white">
            {t("nav.tokenomics")}
          </a>
          <a href="#roadmap" className="text-sm text-neutral-300 hover:text-white">
            {t("nav.roadmap")}
          </a>
          <a href="#buy" className="text-sm text-neutral-300 hover:text-white">
            {t("nav.buy")}
          </a>
        </nav>
        <div className="flex items-center gap-2">
          <LangSwitcher />
          <a
            href="#buy"
            className="hidden rounded-xl bg-white px-3 py-1.5 text-sm text-black transition hover:opacity-90 md:block"
          >
            {t("nav.buy")}
          </a>
        </div>
      </div>
    </div>
  );
}

/* ======================= –î–µ—Ç–µ–∫—Ç —è–∑—ã–∫–∞ ======================= */
function useAutoLang() {
  const { setLang } = useContext(LangContext);
  useEffect(() => {
    const saved = typeof window !== "undefined" ? localStorage.getItem("lang") : null;
    if (saved && LANGS.includes(saved)) setLang(saved);
    else {
      const b = typeof navigator !== "undefined" ? navigator.language.toLowerCase() : "";
      if (b.startsWith("ru")) setLang("ru");
      else if (b.startsWith("hi")) setLang("hi");
      else if (b.startsWith("id")) setLang("id");
      else setLang("ru");
    }
  }, [setLang]);
}

/* ======================= –ö–æ—Ä–Ω–µ–≤–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ======================= */
export default function GarlicAwwwardsSite() {
  const [lang, setLangState] = useState(FALLBACK);
  const setLang = useCallback((l) => setLangState(LANGS.includes(l) ? l : FALLBACK), []);
  const langValue = useMemo(() => ({ lang, setLang }), [lang, setLang]);

  useAutoLang();

  return (
    <CursorProvider>
      <LangContext.Provider value={langValue}>
        <div className="min-h-screen bg-neutral-950 text-white">
          <Navbar />
          <main>
            <Hero />
            <Legend />
            <Policy />
            <Signals />
            <Tokenomics />
            <Roadmap />
            <HowToBuy />
            <Community />
          </main>
          <Footer />
        </div>
      </LangContext.Provider>
    </CursorProvider>
  );
}
